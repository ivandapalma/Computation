% distancia Mahalanobis
inputMejores = input(mejorCombinacion,:);
MCovarianzas = cov(inputMejores');

% Calcular el punto medio de cada caracteristica de cada descriptor
% de los 3 mejores
[F C] = size(inputMejores);
PuntoMedio = zeros(3,3);
Circulos = inputMejores(:,1:15);
Cuadrados = inputMejores(:,16:30);
Triangulos = inputMejores(:,31:45);

% Columna 1: Puntos Medios de Circulos
% Columna 2: Puntos Medios de Cuadrados
% Columna 3: Puntos Medios de Triangulos
for i=1:3 
    PuntoMedio(i,1) = mean(Circulos(i,:));
    PuntoMedio(i,2) = mean(Cuadrados(i,:));
    PuntoMedio(i,3) = mean(Triangulos(i,:));
end

x1 = sym('x1','real');
x2 = sym('x2','real');
x3 = sym('x3','real');
X = [x1; x2; x3];
dc = expand(- (X - PuntoMedio(:,1))' * pinv(MCovarianzas) * (X - PuntoMedio(:,1)));
ds = expand(- (X - PuntoMedio(:,2))' * pinv(MCovarianzas) * (X - PuntoMedio(:,2)));
dt = expand(- (X - PuntoMedio(:,3))' * pinv(MCovarianzas) * (X - PuntoMedio(:,3)));

dcs = dc - ds
dct = dc - dt
dst = ds - dt

% Tb vale 
% dcs = 5469103741688085955311156318027/158456325028528675187087900672*x1-91439340431100922514957882971460719360509644583/1427247692705959881058285969449495136382746624-11479920420509115836681380772193/5070602400912917605986812821504*x2+19224133621984047644441481769559/20282409603651670423947251286016*x3;
% dct = 40075448614786121266350136110485/633825300114114700748351602688*x1-2549171928858078102961985910964063645233817794789/22835963083295358096932575511191922182123945984-13431067118876603335020770745703/20282409603651670423947251286016*x2+22083973511149400579030749385535/81129638414606681695789005144064*x3;
% dst = 18199033648033777445105510838377/633825300114114700748351602688*x1-1086142481960463342722659783420692135465663481461/22835963083295358096932575511191922182123945984+32488614563159860011704752343069/20282409603651670423947251286016*x2-54812560976786789998735177692701/81129638414606681695789005144064*x3;

% Una vez obtenidas las funciones para la frontera de decisión podemos
% proceder a introducir los valores de cada objeto por x1, x2 y x3

[Q W] = size(inputTest);
% Reconocimiento:
distMahala = zeros(3,W);
for i=1:W
    A = inputTest(mejorCombinacion(:,:),i);
    x1=A(1);
    x2=A(2);
    x3=A(3);
    dcsD = double((2734551870844485280236305463855*x1)/79228162514264337593543950336 - (11479920420509527840982296719581*x2)/5070602400912917605986812821504 + (19224133621984002120219553927095*x3)/20282409603651670423947251286016 - 91439340431113302619361833268512938240730218477/1427247692705959881058285969449495136382746624);
    dctD = double((20037724307394013986553102103453*x1)/316912650057057350374175801344 - (13431067118877853078271660681051*x2)/20282409603651670423947251286016 + (22083973511150104561944126994315*x3)/81129638414606681695789005144064 - 2549171928858187599270284137371331067686764786989/22835963083295358096932575511191922182123945984);
    dstD = double((9099516824016072865607880248033*x1)/316912650057057350374175801344 + (32488614563160258285657526197273*x2)/20282409603651670423947251286016 - (54812560976785903918934088714065*x3)/81129638414606681695789005144064 - 1086142481960374757360494805075124055835081291357/22835963083295358096932575511191922182123945984);
    
    distMahala(:,i) = [dcsD; dctD; dstD];
    
    fprintf('\n');
    if (dcsD > 0 && dctD > 0)
        fprintf('%d:Circulo',i)
    elseif (dcsD <= 0 && dstD > 0)
        fprintf('%d:Cuadrado',i)
    elseif (dctD < 0 && dstD < 0)
        fprintf('%d:Triangulo',i)
    else
        fprintf('%d:No se sabe',i)
    end
end
fprintf('\n');

save('distMahala','distMahala');
% Fallos: 0